{
    "groups": [
        {
            "files": [
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "Start a boom game. Call this from your own game script",
                            "has_params": true,
                            "has_returns": false,
                            "name": "boom",
                            "params": [
                                {
                                    "description": "Game loop function",
                                    "name": "game",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "usage": null
                        }
                    ],
                    "file_description": "It is heavily inspired by the Kaboom.js game framework.",
                    "file_summary": "Boom is a game framework built on top of Defold.",
                    "filename": "boom/boom.lua",
                    "group": "boom",
                    "has_params": false,
                    "has_returns": false,
                    "module": "boom",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                }
            ],
            "group": "boom"
        },
        {
            "files": [
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "Anchor point for render.",
                            "has_params": true,
                            "has_returns": true,
                            "name": "anchor",
                            "params": [
                                {
                                    "description": "Anchor (center, topleft, left, topright, right, bottomright, bottom, bottomleft)",
                                    "name": "anchor",
                                    "type": "string"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The anchor component.",
                                    "name": "component",
                                    "type": "AnchorComp"
                                }
                            ],
                            "usage": null
                        }
                    ],
                    "file_description": "Use this component to offset any rendered component such as a SpriteComp from the center of the game object.",
                    "file_summary": "Anchor component.",
                    "filename": "boom/components/anchor.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "anchor",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "This will create an area component which is used to describe an area which can collide with other area components.",
                            "has_params": true,
                            "has_returns": true,
                            "name": "area",
                            "params": [
                                {
                                    "description": "Component options (shape, width, height, radius)",
                                    "name": "options",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The area component",
                                    "name": "area",
                                    "type": "AreaComp"
                                }
                            ],
                            "summary": "Create a collider area and enabled collision detection.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "get_collisions",
                            "params": [],
                            "returns": [
                                {
                                    "description": "List of collisions",
                                    "name": "collisions",
                                    "type": "table"
                                }
                            ],
                            "summary": "Get all collisions currently happening for this component.",
                            "type": "AreaComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "check_collision",
                            "params": [
                                {
                                    "description": "The game object to check collisions with.",
                                    "name": "GameObject",
                                    "type": "other_object"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Return true if colliding with the other object",
                                    "name": "bool",
                                    "type": "collision"
                                },
                                {
                                    "description": "Collision data",
                                    "name": "data",
                                    "type": "table"
                                }
                            ],
                            "summary": "Check collision between this component and another object.",
                            "type": "AreaComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_collide",
                            "params": [
                                {
                                    "description": "Optional tag which colliding object must have, nil for all collisions",
                                    "name": "tag",
                                    "type": "string"
                                },
                                {
                                    "description": "Function to call when collision is detected",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Register event listener when this component is colliding.",
                            "type": "AreaComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_click",
                            "params": [
                                {
                                    "description": "Function to call when clicked",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Register event listener when this component is clicked.",
                            "type": "AreaComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "has_point",
                            "params": [
                                {
                                    "description": "The point to check",
                                    "name": "point",
                                    "type": null
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Will return true if point is within area",
                                    "name": "result",
                                    "type": "bool"
                                }
                            ],
                            "summary": "Check if a point is within the area of this component.",
                            "type": "AreaComp",
                            "usage": null
                        }
                    ],
                    "file_description": "Use this component to define a collider area and bounds for a game object.",
                    "file_summary": "Area component.",
                    "filename": "boom/components/area.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "area",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "entries": [
                        {
                            "description": "Requires AreaComp and PosComp components on the game object. This also makes the object solid.",
                            "has_params": true,
                            "has_returns": true,
                            "name": "body",
                            "params": [
                                {
                                    "description": "Component options (jump_force, is_static)",
                                    "name": "options",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The body component",
                                    "name": "component",
                                    "type": "BodyComp"
                                }
                            ],
                            "summary": "Physical body that responds to gravity.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "jump",
                            "params": [
                                {
                                    "description": "The upward force to apply",
                                    "name": "force",
                                    "type": "number"
                                }
                            ],
                            "returns": [],
                            "summary": "Add upward force",
                            "type": "BodyComp",
                            "usage": null
                        }
                    ],
                    "filename": "boom/components/body.lua",
                    "group": "components",
                    "module": "body"
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "color",
                            "params": [
                                {
                                    "description": "R,g,b components or color",
                                    "name": "...",
                                    "type": null
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The color component",
                                    "name": "component",
                                    "type": "ColorComp"
                                }
                            ],
                            "summary": "Create a color component",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Component to control the color of the game object",
                    "filename": "boom/components/color.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "color",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "entries": [
                        {
                            "description": "Requires \"body\" component",
                            "has_params": true,
                            "has_returns": true,
                            "name": "double_jump",
                            "params": [
                                {
                                    "description": "Component options",
                                    "name": "options",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The double jump component",
                                    "name": "component",
                                    "type": "DoubleJumpComp"
                                }
                            ],
                            "summary": "Enables double jump.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "double_jump",
                            "params": [
                                {
                                    "description": "The upward force to apply",
                                    "name": "force",
                                    "type": "number"
                                }
                            ],
                            "returns": [],
                            "type": "DoubleJumpComp",
                            "usage": null
                        }
                    ],
                    "filename": "boom/components/double_jump.lua",
                    "group": "components",
                    "module": "double_jump"
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "fadein",
                            "params": [
                                {
                                    "description": "In seconds",
                                    "name": "time",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The fade in component.",
                                    "name": "component",
                                    "type": "FadeInComp"
                                }
                            ],
                            "summary": "Fade object in.",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Fade in game object visual components such as sprites.",
                    "filename": "boom/components/fadein.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "fadein",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "fixed",
                            "params": [],
                            "returns": [
                                {
                                    "description": "The component",
                                    "name": "component",
                                    "type": "FixedComp"
                                }
                            ],
                            "summary": "Create a fixed component",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Make object unaffected by camera.",
                    "filename": "boom/components/fixed.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "fixed",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "health",
                            "params": [
                                {
                                    "description": "Initial health",
                                    "name": "hp",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The health component",
                                    "name": "component",
                                    "type": "HealthComp"
                                }
                            ],
                            "summary": "Create a health component",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_heal",
                            "params": [
                                {
                                    "description": "Function to call",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Register an event that runs when heal() is called.",
                            "type": "HealthComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_hurt",
                            "params": [
                                {
                                    "description": "Function to call",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Register an event that runs when hurt() is called.",
                            "type": "HealthComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_death",
                            "params": [
                                {
                                    "description": "Function to call",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Register an event that runs when health is 0 or less.",
                            "type": "HealthComp",
                            "usage": null
                        },
                        {
                            "description": "Will trigger on_heal.",
                            "has_params": true,
                            "has_returns": false,
                            "name": "heal",
                            "params": [
                                {
                                    "description": "Amount to increase",
                                    "name": "n",
                                    "type": "number"
                                }
                            ],
                            "returns": [],
                            "summary": "Increase hp.",
                            "type": "HealthComp",
                            "usage": null
                        },
                        {
                            "description": "Will trigger on_hurt",
                            "has_params": true,
                            "has_returns": false,
                            "name": "hurt",
                            "params": [
                                {
                                    "description": "Amount to decrease",
                                    "name": "n",
                                    "type": "number"
                                }
                            ],
                            "returns": [],
                            "summary": "Decrease hp.",
                            "type": "HealthComp",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Handles health related logic.",
                    "filename": "boom/components/health.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "health",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "lifespan",
                            "params": [
                                {
                                    "description": "In seconds",
                                    "name": "time",
                                    "type": "number"
                                },
                                {
                                    "description": "(fade)",
                                    "name": "options",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "LifespanComp"
                                }
                            ],
                            "summary": "Create a Lifespan component.",
                            "usage": null
                        }
                    ],
                    "file_description": "Use this component when you need a game object to be destroyed after a period of time.",
                    "file_summary": "Destroy the game object after certain amount of time.",
                    "filename": "boom/components/lifespan.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "lifespan",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "move",
                            "params": [
                                {
                                    "description": "Direction of movement.",
                                    "name": "direction",
                                    "type": "vec2"
                                },
                                {
                                    "description": "Speed of movement in pixels per second.",
                                    "name": "speed",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component.",
                                    "name": "component",
                                    "type": "MoveComp"
                                }
                            ],
                            "summary": "Create a move component.",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Move towards a direction infinitely, and destroys when it leaves the game view.",
                    "filename": "boom/components/move.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "move",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": "projectile = add({\n    sprite(\"bullet\"),\n    pos(player.pos),\n    move(vec2(0, 1), 1200),\n})\n"
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "offscreen",
                            "params": [
                                {
                                    "description": "(distance, destroy)",
                                    "name": "options",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "OffscreenComp"
                                }
                            ],
                            "summary": "Create an offscreen component.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_exit_screen",
                            "params": [
                                {
                                    "description": "Function to call when the object goes out of view",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Register a callback that runs when the object goes out of view",
                            "type": "OffscreenComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_enter_screen",
                            "params": [
                                {
                                    "description": "Function to call when the object enters view",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Register a callback that runs when the object enters view",
                            "type": "OffscreenComp",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Control the behavior of a game object when it goes out of view",
                    "filename": "boom/components/offscreen.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "offscreen",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "opacity",
                            "params": [
                                {
                                    "description": "The opacity from 0.0 to 1.0",
                                    "name": "opacity",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "OpacityComp"
                                }
                            ],
                            "summary": "Create an opacity component.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "number",
                            "has_params": false,
                            "has_returns": false,
                            "name": "opacity",
                            "params": [],
                            "returns": [],
                            "summary": "The opacity of the component instance.",
                            "type": "OpacityComp",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Component to control the opacity of a game object.",
                    "filename": "boom/components/opacity.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "opacity",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "pos",
                            "params": [
                                {
                                    "description": "",
                                    "name": "x",
                                    "type": "number"
                                },
                                {
                                    "description": "",
                                    "name": "y",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "Pos"
                                }
                            ],
                            "summary": "Create a position component.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "move",
                            "params": [
                                {
                                    "description": "",
                                    "name": "x",
                                    "type": "number"
                                },
                                {
                                    "description": "",
                                    "name": "y",
                                    "type": "number"
                                }
                            ],
                            "returns": [],
                            "summary": "Move a number of pixels per second.",
                            "type": "Pos",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Position of a game object.",
                    "filename": "boom/components/pos.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "pos",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": "-- this game object will draw a \"bean\" sprite at (100, 200)\nadd({\n   pos(100, 200),\n   sprite(\"bean\")\n})\n"
                },
                {
                    "entries": [
                        {
                            "description": "Apply rotation to object",
                            "has_params": true,
                            "has_returns": true,
                            "name": "rotate",
                            "params": [
                                {
                                    "description": "Angle in degrees",
                                    "name": "angle",
                                    "type": null
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Component",
                                    "name": "The"
                                }
                            ],
                            "usage": null
                        }
                    ],
                    "filename": "boom/components/rotate.lua",
                    "group": "components",
                    "module": "rotate"
                },
                {
                    "entries": [
                        {
                            "description": "Apply a scale to the object",
                            "has_params": true,
                            "has_returns": true,
                            "name": "scale",
                            "params": [
                                {
                                    "description": "",
                                    "name": "x",
                                    "type": null
                                },
                                {
                                    "description": "",
                                    "name": "y",
                                    "type": null
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Component",
                                    "name": "The"
                                }
                            ],
                            "usage": null
                        }
                    ],
                    "filename": "boom/components/scale.lua",
                    "group": "components",
                    "module": "scale"
                },
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "sprite",
                            "params": [
                                {
                                    "description": "Which animation or image to use",
                                    "name": "anim",
                                    "type": "string"
                                },
                                {
                                    "description": "Extra options (flip_x, flip_y, width, height)",
                                    "name": "options",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "SpriteComp"
                                }
                            ],
                            "summary": "Render a sprite.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "string",
                            "has_params": false,
                            "has_returns": false,
                            "name": "anim",
                            "params": [],
                            "returns": [],
                            "summary": "The current animation",
                            "type": "SpriteComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "number",
                            "has_params": false,
                            "has_returns": false,
                            "name": "width",
                            "params": [],
                            "returns": [],
                            "summary": "The width of the sprite",
                            "type": "SpriteComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "number",
                            "has_params": false,
                            "has_returns": false,
                            "name": "height",
                            "params": [],
                            "returns": [],
                            "summary": "The height of the sprite",
                            "type": "SpriteComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "bool",
                            "has_params": false,
                            "has_returns": false,
                            "name": "flip_x",
                            "params": [],
                            "returns": [],
                            "summary": "If sprite should be flipped horizontally",
                            "type": "SpriteComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "bool",
                            "has_params": false,
                            "has_returns": false,
                            "name": "flip_y",
                            "params": [],
                            "returns": [],
                            "summary": "If the sprite should be flipped vertically",
                            "type": "SpriteComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "play",
                            "params": [
                                {
                                    "description": "The animation to play",
                                    "name": "anim",
                                    "type": "string"
                                }
                            ],
                            "returns": [],
                            "summary": "Play an animation",
                            "type": "Sprite",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": false,
                            "name": "stop",
                            "params": [],
                            "returns": [],
                            "summary": "Stop the current animation",
                            "type": "Sprite",
                            "usage": null
                        }
                    ],
                    "filename": "boom/components/sprite.lua",
                    "group": "components",
                    "module": "sprite"
                },
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "stay",
                            "params": [],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "StayComp"
                                }
                            ],
                            "summary": "Do not get destroyed on scene switch.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/components/stay.lua",
                    "group": "components",
                    "module": "stay"
                },
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "text",
                            "params": [
                                {
                                    "description": "The text to show",
                                    "name": "text",
                                    "type": "string"
                                },
                                {
                                    "description": "Text options (width, font, align)",
                                    "name": "options",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "TextComp"
                                }
                            ],
                            "summary": "Render text.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "string",
                            "has_params": false,
                            "has_returns": false,
                            "name": "text",
                            "params": [],
                            "returns": [],
                            "summary": "The text to render",
                            "type": "TextComp",
                            "usage": null
                        }
                    ],
                    "filename": "boom/components/text.lua",
                    "group": "components",
                    "module": "text"
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "timer",
                            "params": [
                                {
                                    "description": "Number of seconds to wait",
                                    "name": "n",
                                    "type": "number"
                                },
                                {
                                    "description": "The function to call",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "TimerComp"
                                }
                            ],
                            "summary": "Run certain action after some time.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "wait",
                            "params": [
                                {
                                    "description": "Seconds",
                                    "name": "n",
                                    "type": "number"
                                },
                                {
                                    "description": "The function to call",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Run a callback function after n seconds",
                            "type": "TimerComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "loop",
                            "params": [
                                {
                                    "description": "Seconds",
                                    "name": "n",
                                    "type": "number"
                                },
                                {
                                    "description": "The function to call",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Run a callback function every n seconds",
                            "type": "TimerComp",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": false,
                            "name": "cancel",
                            "params": [],
                            "returns": [],
                            "summary": "Cancel the timer",
                            "type": "TimerComp",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Run an action once or repeatedly at a set interval",
                    "filename": "boom/components/timer.lua",
                    "group": "components",
                    "has_params": false,
                    "has_returns": false,
                    "module": "timer",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                },
                {
                    "entries": [
                        {
                            "description": "Object will be drawn on top if z value is bigger.",
                            "has_params": true,
                            "has_returns": true,
                            "name": "z",
                            "params": [
                                {
                                    "description": "Z-value of the object.",
                                    "name": "z",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created component",
                                    "name": "component",
                                    "type": "ZComp"
                                }
                            ],
                            "summary": "Determines the draw order for objects.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "number",
                            "has_params": false,
                            "has_returns": false,
                            "name": "z",
                            "params": [],
                            "returns": [],
                            "summary": "The z value",
                            "type": "ZComp",
                            "usage": null
                        }
                    ],
                    "filename": "boom/components/z.lua",
                    "group": "components",
                    "module": "z"
                }
            ],
            "group": "components"
        },
        {
            "files": [
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "on_collide",
                            "params": [
                                {
                                    "description": "Tag which the first game object must have",
                                    "name": "tag1",
                                    "type": "string"
                                },
                                {
                                    "description": "Optional tag which the second game object must have",
                                    "name": "tag2",
                                    "type": "string"
                                },
                                {
                                    "description": "Will receive (collision, cancel) as args",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Cancel event function",
                                    "name": "cancel",
                                    "type": "function"
                                }
                            ],
                            "summary": "Register an event that runs when two game objects collide.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/events/collision.lua",
                    "group": "events",
                    "module": "collision"
                },
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "on_key_press",
                            "params": [
                                {
                                    "description": "The key that must be pressed or nil for any key",
                                    "name": "key_id",
                                    "type": "string"
                                },
                                {
                                    "description": "The callback",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Cancel callback",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "summary": "Register callback that runs when a certain key is pressed.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "on_key_release",
                            "params": [
                                {
                                    "description": "The key that must be released or nil for any key",
                                    "name": "key_id",
                                    "type": "string"
                                },
                                {
                                    "description": "The callback",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Cancel callback",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "summary": "Register callback that runs when a certain key is released.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "is_key_down",
                            "params": [
                                {
                                    "description": "The key that must be down, or nil for any key",
                                    "name": "key_id",
                                    "type": "string"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "True if down",
                                    "name": "down",
                                    "type": "bool"
                                }
                            ],
                            "summary": "Check if a certain key is down.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/events/key.lua",
                    "group": "events",
                    "module": "key"
                },
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "on_click",
                            "params": [
                                {
                                    "description": "Optional click on object with tag filter",
                                    "name": "tag",
                                    "type": "string"
                                },
                                {
                                    "description": "Callback when mouse button is clicked",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Cancel listener function",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "summary": "Set mouse click listener.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "mouse_pos",
                            "params": [],
                            "returns": [
                                {
                                    "description": "Mouse position",
                                    "name": "pos",
                                    "type": "vec2"
                                }
                            ],
                            "summary": "Get mouse position (screen coordinates).",
                            "usage": null
                        }
                    ],
                    "filename": "boom/events/mouse.lua",
                    "group": "events",
                    "module": "mouse"
                },
                {
                    "entries": [
                        {
                            "description": "Register an event that runs every frame, optionally for all game objects with certain tag",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_update",
                            "params": [
                                {
                                    "description": "Run event for all objects matching tag (optional)",
                                    "name": "tag",
                                    "type": "string"
                                },
                                {
                                    "description": "The event function to call. Will receive object and cancel function.",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Run a function every frame.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/events/update.lua",
                    "group": "events",
                    "module": "update"
                }
            ],
            "group": "events"
        },
        {
            "files": [
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "add",
                            "params": [
                                {
                                    "description": "The components for the game object",
                                    "name": "comps",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created game object",
                                    "name": "object",
                                    "type": "GameObject"
                                }
                            ],
                            "summary": "Add a game object with a set of components.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "add",
                            "params": [
                                {
                                    "description": "The game object components",
                                    "name": "comps",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The game object",
                                    "name": "GameObject",
                                    "type": "table"
                                }
                            ],
                            "summary": "Add a game object as a child of this game object.",
                            "type": "GameObject",
                            "usage": null
                        },
                        {
                            "description": "Destroy this game object",
                            "has_params": false,
                            "has_returns": false,
                            "name": "destroy",
                            "params": [],
                            "returns": [],
                            "type": "GameObject",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "is",
                            "params": [
                                {
                                    "description": "The tag to check",
                                    "name": "tag",
                                    "type": "string"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Returns true if the tag exists on the game object",
                                    "name": "result",
                                    "type": "bool"
                                }
                            ],
                            "summary": "Check if there is a certain tag on this game object.",
                            "type": "GameObject",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "use",
                            "params": [
                                {
                                    "description": "The component to use",
                                    "name": "comp",
                                    "type": "table"
                                }
                            ],
                            "returns": [],
                            "summary": "Add a component to this game object.",
                            "type": "GameObject",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "unuse",
                            "params": [
                                {
                                    "description": "The component tag to remove",
                                    "name": "tag",
                                    "type": "string"
                                }
                            ],
                            "returns": [],
                            "summary": "Remove a component from this game object.",
                            "type": "GameObject",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "c",
                            "params": [
                                {
                                    "description": "The component to get state for",
                                    "name": "tag",
                                    "type": "string"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The component state",
                                    "name": "state",
                                    "type": "table"
                                }
                            ],
                            "summary": "Get state for a specific component on this game object.",
                            "type": "GameObject",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "destroy",
                            "params": [
                                {
                                    "description": "The object to destroy",
                                    "name": "object",
                                    "type": "GameObject"
                                }
                            ],
                            "returns": [],
                            "summary": "Destroy a game object and all of its components.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "destroy_all",
                            "params": [
                                {
                                    "description": "The tag to destroy or nil to destroy all objects",
                                    "name": "tag",
                                    "type": "string"
                                }
                            ],
                            "returns": [],
                            "summary": "Destroy all objects with a certain tag.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "object",
                            "params": [
                                {
                                    "description": "",
                                    "name": "id",
                                    "type": "string"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The object or nil if it doesn't exist",
                                    "name": "string",
                                    "type": "id"
                                }
                            ],
                            "summary": "Get game object with specific id.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "objects",
                            "params": [],
                            "returns": [
                                {
                                    "description": "All game objects",
                                    "name": "table",
                                    "type": "objects"
                                }
                            ],
                            "summary": "Get all game objects.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "get",
                            "params": [
                                {
                                    "description": "The tag to get objects for, nil to get all objects",
                                    "name": "tag",
                                    "type": "string"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "List of objects",
                                    "name": "objects",
                                    "type": "table"
                                }
                            ],
                            "summary": "Get all game objects with the specified tag.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "every",
                            "params": [
                                {
                                    "description": "The tag that must exist on the object",
                                    "name": "tag",
                                    "type": "string"
                                },
                                {
                                    "description": "The callback to run",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Run callback on every object with a certain tag.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/gameobject/gameobject.lua",
                    "group": "gameobject",
                    "module": "gameobject"
                }
            ],
            "group": "gameobject"
        },
        {
            "files": [
                {
                    "entries": [
                        {
                            "description": "Get or set camera position.",
                            "has_params": true,
                            "has_returns": true,
                            "name": "cam_pos",
                            "params": [
                                {
                                    "description": "Or vec2",
                                    "name": "x",
                                    "type": null
                                },
                                {
                                    "description": "",
                                    "name": "y",
                                    "type": null
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Camera position",
                                    "name": "position"
                                }
                            ],
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "cam_rot",
                            "params": [
                                {
                                    "description": "The angle to set or nil to get current rotation",
                                    "name": "angle",
                                    "type": null
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The camera rotation in degrees",
                                    "name": "rotation"
                                }
                            ],
                            "summary": "Get or set camera rotation.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "cam_zoom",
                            "params": [
                                {
                                    "description": "The zoom to set or nil to get the current zoom.",
                                    "name": "zoom",
                                    "type": null
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Camera zoom",
                                    "name": "The"
                                }
                            ],
                            "summary": "Get or set the camera zoom.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/info/camera.lua",
                    "group": "info",
                    "module": "camera"
                },
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": true,
                            "name": "get_gravity",
                            "params": [],
                            "returns": [
                                {
                                    "description": "The gravity in pixels per seconds",
                                    "name": "gravity",
                                    "type": "number"
                                }
                            ],
                            "summary": "Get gravity",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "set_gravity",
                            "params": [
                                {
                                    "description": "Gravity in pixels per seconds",
                                    "name": "gravity",
                                    "type": "number"
                                }
                            ],
                            "returns": [],
                            "summary": "Set gravity",
                            "usage": null
                        }
                    ],
                    "filename": "boom/info/gravity.lua",
                    "group": "info",
                    "module": "gravity"
                },
                {
                    "entries": [
                        {
                            "description": "Get screen width",
                            "has_params": false,
                            "has_returns": true,
                            "name": "width",
                            "params": [],
                            "returns": [
                                {
                                    "description": "Of screen",
                                    "name": "Width"
                                }
                            ],
                            "usage": null
                        },
                        {
                            "description": "Get screen height",
                            "has_params": false,
                            "has_returns": true,
                            "name": "height",
                            "params": [],
                            "returns": [
                                {
                                    "description": "Of screen",
                                    "name": "Height"
                                }
                            ],
                            "usage": null
                        },
                        {
                            "description": "Get screen center position",
                            "has_params": false,
                            "has_returns": true,
                            "name": "center",
                            "params": [],
                            "returns": [
                                {
                                    "description": "Of screen (vec2)",
                                    "name": "Center"
                                }
                            ],
                            "usage": null
                        }
                    ],
                    "filename": "boom/info/screen.lua",
                    "group": "info",
                    "module": "screen"
                },
                {
                    "entries": [
                        {
                            "description": "Get the delta time",
                            "has_params": false,
                            "has_returns": true,
                            "name": "dt",
                            "params": [],
                            "returns": [
                                {
                                    "description": "Delta time",
                                    "name": "dt"
                                }
                            ],
                            "usage": null
                        },
                        {
                            "description": "Get time since start",
                            "has_params": false,
                            "has_returns": true,
                            "name": "time",
                            "params": [],
                            "returns": [
                                {
                                    "description": "Time since start in seconds",
                                    "name": "time"
                                }
                            ],
                            "usage": null
                        }
                    ],
                    "filename": "boom/info/time.lua",
                    "group": "info",
                    "module": "time"
                }
            ],
            "group": "info"
        },
        {
            "files": [
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "add_level",
                            "params": [
                                {
                                    "description": "List of strings presenting horizontal rows of tiles",
                                    "name": "map",
                                    "type": "table"
                                },
                                {
                                    "description": "Level options (tile_width, tile_height, pos, tiles)",
                                    "name": "options",
                                    "type": "table"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Game object with tiles as children",
                                    "name": "level",
                                    "type": "GameObject"
                                }
                            ],
                            "summary": "Construct a level based on symbols.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/level/level.lua",
                    "group": "level",
                    "module": "level"
                }
            ],
            "group": "level"
        },
        {
            "files": [
                {
                    "entries": [
                        {
                            "description": "If called with no arguments the function returns a number between 0 and 1. If called with a single argument 'a' a number between 0 and 'a' is returned. If called with two arguments 'a' and 'b' a number between 'a' and 'b' is returned.",
                            "has_params": true,
                            "has_returns": true,
                            "name": "rand",
                            "params": [
                                {
                                    "description": "",
                                    "name": "a",
                                    "type": "number"
                                },
                                {
                                    "description": "",
                                    "name": "b",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Random number",
                                    "name": "number",
                                    "type": "number"
                                }
                            ],
                            "summary": "Get a random number.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "randi",
                            "params": [
                                {
                                    "description": "",
                                    "name": "a",
                                    "type": "number"
                                },
                                {
                                    "description": "",
                                    "name": "b",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Random integer number",
                                    "name": "number",
                                    "type": "number"
                                }
                            ],
                            "summary": "Same as rand() but floored.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/math/random.lua",
                    "group": "math",
                    "module": "random"
                },
                {
                    "entries": [
                        {
                            "description": "The transition will happen over a certain duration using a specific easing function.",
                            "has_params": true,
                            "has_returns": true,
                            "name": "tween",
                            "params": [
                                {
                                    "description": "Start value",
                                    "name": "from",
                                    "type": "number"
                                },
                                {
                                    "description": "Start value",
                                    "name": "from",
                                    "type": "vec2"
                                },
                                {
                                    "description": "End value",
                                    "name": "to",
                                    "type": "number"
                                },
                                {
                                    "description": "End value",
                                    "name": "to",
                                    "type": "vec2"
                                },
                                {
                                    "description": "Time in seconds to go from start to end value",
                                    "name": "duration",
                                    "type": "number"
                                },
                                {
                                    "description": "Which easing algorithm to use",
                                    "name": "easing",
                                    "type": "string"
                                },
                                {
                                    "description": "Function to call when the value has changed",
                                    "name": "set_value",
                                    "type": "function"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "A tween controller object.",
                                    "name": "controller",
                                    "type": "TweenController"
                                }
                            ],
                            "summary": "Tween a value from one to another.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "on_end",
                            "params": [
                                {
                                    "description": "The function to call when the tween has finished",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Register an event when finished",
                            "type": "TweenController",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": false,
                            "name": "finish",
                            "params": [],
                            "returns": [],
                            "summary": "Finish tween now.",
                            "type": "TweenController",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": false,
                            "has_returns": false,
                            "name": "cancel",
                            "params": [],
                            "returns": [],
                            "summary": "Cancel tween.",
                            "type": "TweenController",
                            "usage": null
                        }
                    ],
                    "filename": "boom/math/tween.lua",
                    "group": "math",
                    "module": "tween"
                },
                {
                    "description": null,
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "vec2",
                            "params": [
                                {
                                    "description": "Horizontal position",
                                    "name": "x",
                                    "type": "number"
                                },
                                {
                                    "description": "Vertical position",
                                    "name": "y",
                                    "type": "number"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "The created vec2",
                                    "name": "v2",
                                    "type": "Vec2"
                                }
                            ],
                            "summary": "Create a Vec2",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "Vec2",
                            "has_params": false,
                            "has_returns": false,
                            "name": "UP",
                            "params": [],
                            "returns": [],
                            "summary": "UP vector",
                            "type": "Vec2",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "Vec2",
                            "has_params": false,
                            "has_returns": false,
                            "name": "DOWN",
                            "params": [],
                            "returns": [],
                            "summary": "DOWN vector",
                            "type": "Vec2",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "Vec2",
                            "has_params": false,
                            "has_returns": false,
                            "name": "LEFT",
                            "params": [],
                            "returns": [],
                            "summary": "LEFT vector",
                            "type": "Vec2",
                            "usage": null
                        },
                        {
                            "description": "",
                            "field": true,
                            "field_type": "Vec2",
                            "has_params": false,
                            "has_returns": false,
                            "name": "RIGHT",
                            "params": [],
                            "returns": [],
                            "summary": "RIGHT vector",
                            "type": "Vec2",
                            "usage": null
                        }
                    ],
                    "file_description": "",
                    "file_summary": "Vector type for a 2D point (backed by Defold vmath.vector3())",
                    "filename": "boom/math/vec2.lua",
                    "group": "math",
                    "has_params": false,
                    "has_returns": false,
                    "module": "vec2",
                    "name": null,
                    "params": [],
                    "returns": [],
                    "summary": null,
                    "usage": null
                }
            ],
            "group": "math"
        },
        {
            "files": [
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "scene",
                            "params": [
                                {
                                    "description": "Unique id of the scene",
                                    "name": "id",
                                    "type": "string"
                                },
                                {
                                    "description": "The scene code",
                                    "name": "fn",
                                    "type": "function"
                                }
                            ],
                            "returns": [],
                            "summary": "Create a scene.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": false,
                            "name": "show",
                            "params": [
                                {
                                    "description": "Id of the scene to show",
                                    "name": "id",
                                    "type": "string"
                                },
                                {
                                    "description": "Additional arguments to pass to the scene function",
                                    "name": "...",
                                    "type": null
                                }
                            ],
                            "returns": [],
                            "summary": "Show a scene.",
                            "usage": null
                        }
                    ],
                    "filename": "boom/scene/scene.lua",
                    "group": "scene",
                    "module": "scene"
                }
            ],
            "group": "scene"
        },
        {
            "files": [
                {
                    "entries": [
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "wait",
                            "params": [
                                {
                                    "description": "Number of seconds to wait",
                                    "name": "seconds",
                                    "type": "number"
                                },
                                {
                                    "description": "Function to call",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Call to cancel the timer",
                                    "name": "cancel",
                                    "type": "function"
                                }
                            ],
                            "summary": "Run a callback after a certain nummber of seconds.",
                            "usage": null
                        },
                        {
                            "description": "",
                            "has_params": true,
                            "has_returns": true,
                            "name": "loop",
                            "params": [
                                {
                                    "description": "Interval between calls",
                                    "name": "seconds",
                                    "type": "number"
                                },
                                {
                                    "description": "Function to call",
                                    "name": "cb",
                                    "type": "function"
                                }
                            ],
                            "returns": [
                                {
                                    "description": "Call to cancel the timer",
                                    "name": "cancel",
                                    "type": "function"
                                }
                            ],
                            "summary": "Run a callback repeatedly with a certain interval",
                            "usage": null
                        }
                    ],
                    "filename": "boom/timer/timer.lua",
                    "group": "timer",
                    "module": "timer"
                }
            ],
            "group": "timer"
        }
    ]
}